{
	"Name" : "ExampleContent", 
	"Title" : "Example Content Generator Title",
	"Description" : "This is an example Content Generator, its purpose is to document the functionality of Bonsai Content Generators",
	"ButtonText" : "Again",
	"Type" : "Content",

	"Dependencies" : "generators/table/Colors.json;generators/table/Names.json;generators/content/ExampleNestedContent.json",
    
    "Variables" : {
      "Color" : "$T-Colors$",
      "Amount" : "$R-3_6$"      
    },

	"Data" : {
		"1" : {
			"Text" : "This is an example content file. A simple section like this always shows up."			
		},
		"2" : {
			"Text" : "This section only shows up some of the time. Specifically 75% of the time.",
			"Chance" : 75			
		},
		"3" : {
			"Text" : "You can use the ParagraphType option to changes the way the text will be displayed in browser. The default is Paragraph. You can also have Paragraph-Start and Paragraph-End to cross paragraphs across sections. List will display text entries in unordered lists. List-Start and List-End work exactly like Paragraph-Start and -End. If a type is set that is not recognized no decorations will be added.",
			"ParagraphType" : "Paragraph"		
		},
		"4" : {
			"Text" : "<p><h3>Example Header</h3>When ParagraphType  is set to something unssuported Bonsai will not add any markup. This leave you free to add markup of your own. Like the Header above this paragraph.</p>",
			"ParagraphType" : "None"		
		},
		"5" : {
			"Text" : "The section below actually repeats between 1 and 5 times. It also calling a Table Generator to replace the text with content from another generator. Colors in this case. By setting the ParagraphType to List its displayed as a list with dots."		
		},
		"6" : {
			"Text" : "$T-Colors$",
			"MinAmount" : 1,
			"MaxAmount" : 5,
			"ParagraphType" : "List"
		},
        "7" : {
			"Text" : "A double Column list of colours, requires some simple css"			
		},
        "8" : {
			"Text" : "$T-Colors$",
			"MinAmount" : 10,
			"MaxAmount" : 30,
			"ParagraphType" : "DoubleList"
		},
		"9" : {
			"Text" : "The Name list below shows up 75% of the time and has 1 to 3 repeats. If you want to use Generators in other Generator files you need to add the specific files needed to load for those in the Dependencies Entry at the top."		
		},
		"10" : {
			"Text" : "$T-Names$",
			"Chance" : 75,
			"MinAmount" : 1,
			"MaxAmount" : 3,
			"ParagraphType" : "List"
		},
		"11" : {
			"Text" : "This entry generates a random number between 1 and 1000 through a special Generator markup:$R-1_1000$."
		},
		"12" : {
			"Text" : "$C-ExampleNestedContent$",
			"ParagraphType" : "None"
		},
		"13":{
			"TextTable" : [
				{"If a section has a TextTable like this.":1},
				{"In that case the TextTable option is treated much like one section of a Table file":1},
				{"And one of these options will be displayed as the text":1},
				{"Options with heigher weights will have a heigher chance to show up":2}	
			],
			"Text" : "Any text in a text entry is overwritten, so this will never be shown.", 
			"ParagraphType" : "None"
		},
		"14":{
			"TextIndex" : [
				{"Index":"Stuff"},
				{"Used for":"http://www.google.nl/"},
				{"Convenient lists of links":"local/link"},
				{"Exclusive with Text or TextTable":"test"}	
			],
			"Text" : "Any text in a text entry is overwritten, so this will never be shown. ParagraphType defaults to list but can also be DoubleIndex for a double column index."                         			
		},
        "15":{
            "Text" : "<h3>Variables</h3> Variables can be set in the special Variables Section, once set they can be included in the text like markup. For Example:"
        },
        "16":{
            "Text" : "John was wearing hip $V-Color$ shades and was juggeling $V-Amount$ balls, sadly one of his $V-Amount$ balls caused him to knock his $V-Color$ shades to the ground."
        }
	}
}